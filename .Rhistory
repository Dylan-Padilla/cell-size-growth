render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
q()
n
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
colorize <- function(x, color) { if (knitr::is_latex_output()) { sprintf("\\textcolor{%s}{%s}", color, x) } else if (knitr::is_html_output()) { sprintf("<span style='color: %s;'>%s</span>", color, x) } else x }
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
render("index.Rmd")
q()
n
setwd("../")
getwd()
mrg.data$species
tree$tip.label
library(nmle
)
library(nlme)
interact_plot(model4.2.1, log(tRNA), d1_up, data = mrg.dat)
library(interactions)
interact_plot(model4.2.1, log(tRNA), d1_up, data = mrg.dat)
interact_plot(model4.2.1, log(tRNA), d1_up, data = mrg.dat)
interact_plot(model4.2.1, log(tRNA), d1_up, data = mrg.dat)
log(45)
log(50)
log(60)
log(80)
log(90)
plot(d1_up ~ log(tmp.op),  data = tmp.dat, ylab = expression(paste("Cell diameter")~mu*m~(log[10])), xlab = "Optimum temperature \u00B0C (log)", las = 1, pch = 21, cex = 1.2, type = "n")
plot(d1_up ~ log(tmp.op),  data = tmp.dat, ylab = expression(paste("Cell diameter")~mu*m~(log[10])), xlab = "Optimum temperature \u00B0C (log)", las = 1, pch = 21, cex = 1.2)
plot(d1_up ~ log(tmp.op),  data = tmp.dat, ylab = expression(paste("Cell diameter")~mu*m~(log[10])), xlab = "Optimum temperature \u00B0C (log)", las = 1, pch = 21, cex = 1.2, type = "n")
plot(d1_up ~ log(tmp.op),  data = tmp.dat, ylab = expression(paste("Cell diameter")~mu*m~(log[10])), xlab = "Optimum temperature \u00B0C (log)", las = 1, pch = 21, cex = 1.2, col = cols, bg = cols)
abline(coef(model13.1)[1] + coef(model13.1)[2])
abline(a = coef(model13.1)[1], b = coef(model13.1)[2])
abline(a = log(coef(model13.1)[1]), b = coef(model13.1)[2])
abline(a = log(coef(model13.1)[1]), b = coef(model13.1)[2])
abline(a = log(coef(model13.1)[1]), b = coef(model13.1)[2])
?abline(a = log(coef(model13.1)[1]), b = coef(model13.1)[2])
?abline
q()
n
